# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so
*.dll
*.dylib

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
coverage/
test_output/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyMatLib specific
# Generated version file
src/pymatlib/_version.py

# Plot outputs
pymatlib_plots/
*.png
*.jpg
*.jpeg
*.gif
*.svg

# Report outputs
pymatlib_reports/
*.pdf
!paper/*.pdf

# Data files (unless specifically needed)
# *.xlsx
*.csv
*.dat
*.txt
!README.txt
!requirements.txt
!LICENSE.txt

# Temporary files
*.tmp
*.bak
*.swp
*.swo
*~

# IDE/Editor files
.idea/
.vscode/
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# CMake and C++ build artifacts
**/cmake-build*/
**/cmake-build-debug/
**/cmake-build-release/
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
build.ninja
*.vcxproj
*.vcxproj.filters
*.sln

# Walberla and external dependencies
apps/walberla/
apps/sfg-walberla/
extern/

# Test artifacts
TestArrayContainer.cpp
TestArrayContainer.hpp
test_yaml_config.cpp
test_yaml_config.hpp

# VTK output
vtk_out/

# Generated code
_gen/

# Profiling data
*.prof
*.lprof

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# PyCharm
.idea/

# VS Code
.vscode/
*.code-workspace

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Vim
*.swp
*.swo
*~
.netrwhist

# Sublime Text
*.sublime-project
*.sublime-workspace

# Local configuration files
config.local.py
settings.local.py

# Documentation builds
docs/_build/
docs/build/

# Backup files
*.backup
*.old

# Log files
*.log
logs/

# Database files
*.db
*.sqlite
*.sqlite3

# Compiled Python files
*.pyc
*.pyo

# Package files
*.tar.gz
*.zip
*.rar

# macOS
.AppleDouble
.LSOverride
Icon

# Windows
desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*
